// about.js (About Us Ï†ÑÏö© Ïä§ÌÅ¨Î¶ΩÌä∏) - ÏàòÏ†ïÎêú Î≤ÑÏ†Ñ
// üî• Í∞ïÏ†ú Î¶¨Îã§Ïù¥Î†âÌä∏ Ï†úÍ±∞ + ÏÉàÎ°úÍ≥†Ïπ® Ïãú ÏÉÅÎã® Ïù¥Îèô

document.addEventListener('DOMContentLoaded', () => {
  console.log('üìÑ About.js starting...');

  // ‚îÄ‚îÄ‚îÄ üî• ÏÉàÎ°úÍ≥†Ïπ® Ïãú ÌéòÏù¥ÏßÄ ÏÉÅÎã®ÏúºÎ°ú Ïù¥Îèô (Î¶¨Îã§Ïù¥Î†âÌä∏ ÎåÄÏã†) ‚îÄ‚îÄ‚îÄ
  try {
    if (performance.getEntriesByType('navigation')[0].type === 'reload') {
      console.log('üîÑ About page refresh detected, scrolling to top...');
      window.scrollTo(0, 0);
      // Î¶¨Îã§Ïù¥Î†âÌä∏ ÏΩîÎìú Ï†úÍ±∞Îê®
    }
  } catch (e) {
    console.log('‚ö†Ô∏è Navigation API not supported, continuing...');
  }

  // ‚îÄ‚îÄ‚îÄ About ÌéòÏù¥ÏßÄ Ï†ÑÏö© Í∏∞Îä•Îì§Îßå Ïó¨Í∏∞ÏÑú Ï≤òÎ¶¨ ‚îÄ‚îÄ‚îÄ

  // 1) SCROLL Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ (About ÌéòÏù¥ÏßÄ Ï†ÑÏö©)
  const scrollIndicator = document.querySelector('.scroll-indicator');
  if (scrollIndicator) {
    scrollIndicator.addEventListener('click', () => {
      const mainContent = document.querySelector('.main-content') || 
                         document.querySelector('.about-content-wrapper') ||
                         document.querySelector('.content-section');
      
      if (mainContent) {
        mainContent.scrollIntoView({
          behavior: 'smooth'
        });
        console.log('üìú Smooth scroll to main content initiated');
      }
    });
    console.log('‚úÖ About page scroll indicator initialized');
  }

  // 2) About ÌéòÏù¥ÏßÄ Ï†ÑÏö© fade-up Ïï†ÎãàÎ©îÏù¥ÏÖò (common.jsÏôÄ Ï§ëÎ≥µ Î∞©ÏßÄ)
  // üî• data-about-observed ÏÜçÏÑ±ÏúºÎ°ú Ï§ëÎ≥µ Î∞©ÏßÄ
  const aboutFadeElements = document.querySelectorAll('.fade-up:not([data-about-observed])');
  
  if (aboutFadeElements.length > 0) {
    const aboutObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('is-visible');
          entry.target.classList.add('visible'); // Ï∂îÍ∞Ä ÌÅ¥ÎûòÏä§
          aboutObserver.unobserve(entry.target);
        }
      });
    }, { 
      threshold: 0.1,
      rootMargin: '0px 0px -30px 0px'
    });
    
    aboutFadeElements.forEach((element) => {
      element.setAttribute('data-about-observed', 'true');
      aboutObserver.observe(element);
    });
    
    console.log('‚úÖ About page fade-up animations initialized:', aboutFadeElements.length);
  }

  // 3) ÏÑúÎπÑÏä§ Î¶¨Ïä§Ìä∏ Ìò∏Î≤Ñ Ìö®Í≥º Í∞ïÌôî (Îç∞Ïä§ÌÅ¨ÌÜ±Îßå, About ÌéòÏù¥ÏßÄ Ï†ÑÏö©)
  if (window.innerWidth > 768) {
    const serviceItems = document.querySelectorAll('.services-list li');
    if (serviceItems.length > 0) {
      serviceItems.forEach((item, index) => {
        item.addEventListener('mouseenter', () => {
          item.style.transform = 'translateX(15px)';
          item.style.color = '#E37031';
        });
        
        item.addEventListener('mouseleave', () => {
          item.style.transform = 'translateX(0)';
          item.style.color = '#ccc';
        });
      });
      console.log('‚úÖ Service items hover effects initialized:', serviceItems.length);
    }
  }

  // üî• 4) ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Î∞ïÏä§ Ìò∏Î≤Ñ Ìö®Í≥º Ï†úÍ±∞
  const clientBoxes = document.querySelectorAll('.client-box');
  if (clientBoxes.length > 0) {
    clientBoxes.forEach((box, index) => {
      // Ìò∏Î≤Ñ Ìö®Í≥º ÏôÑÏ†Ñ Ï†úÍ±∞
      box.style.cursor = 'default';
    });
    console.log('‚úÖ Client boxes hover effects removed:', clientBoxes.length);
  }

  // 5) Ïä§ÌÅ¨Î°§ ÏßÑÌñâÎ•† ÌëúÏãú (CSS Î≥ÄÏàòÎ°ú ÏÑ§Ï†ï)
  function updateScrollProgress() {
    const scrollTop = window.pageYOffset;
    const docHeight = document.body.offsetHeight - window.innerHeight;
    const scrollPercent = Math.min((scrollTop / docHeight) * 100, 100);
    
    // Ïä§ÌÅ¨Î°§ ÏßÑÌñâÎ•†ÏùÑ CSS Î≥ÄÏàòÎ°ú ÏÑ§Ï†ï
    document.documentElement.style.setProperty('--scroll-progress', scrollPercent + '%');
  }

  // Ïä§ÌÅ¨Î°§ Ïù¥Î≤§Ìä∏ ÏµúÏ†ÅÌôî (throttle Ï†ÅÏö©)
  let scrollTimeout;
  window.addEventListener('scroll', () => {
    if (scrollTimeout) {
      clearTimeout(scrollTimeout);
    }
    scrollTimeout = setTimeout(updateScrollProgress, 10);
  }, { passive: true });

  // 6) Î™®Î∞îÏùº ÌÑ∞Ïπò ÏµúÏ†ÅÌôî
  if ('ontouchstart' in window) {
    document.body.classList.add('touch-device');
    console.log('üì± Touch device detected, mobile optimizations applied');
  }

  // 7) Î∏åÎùºÏö∞Ï†Ä Ìò∏ÌôòÏÑ± Ï≤¥ÌÅ¨ Î∞è Ìè¥Î∞±
  function checkBrowserSupport() {
    // IntersectionObserver ÏßÄÏõê Ï≤¥ÌÅ¨
    if (!('IntersectionObserver' in window)) {
      console.warn('‚ö†Ô∏è IntersectionObserver not supported, applying fallback');
      document.querySelectorAll('.fade-up').forEach(el => {
        el.classList.add('is-visible', 'visible');
      });
    }

    // CSS Grid ÏßÄÏõê Ï≤¥ÌÅ¨
    if (!CSS.supports('display', 'grid')) {
      console.warn('‚ö†Ô∏è CSS Grid not supported');
      document.body.classList.add('no-grid-support');
    }

    // CSS ÏÇ¨Ïö©Ïûê Ï†ïÏùò ÏÜçÏÑ± ÏßÄÏõê Ï≤¥ÌÅ¨
    if (!CSS.supports('color', 'var(--test)')) {
      console.warn('‚ö†Ô∏è CSS Custom Properties not supported');
      document.body.classList.add('no-css-vars');
    }
  }

  checkBrowserSupport();

  // 8) About ÌéòÏù¥ÏßÄ Ï†ÑÏö© ÌÇ§Î≥¥Îìú ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò
  document.addEventListener('keydown', (e) => {
    // ESC ÌÇ§ Ï≤òÎ¶¨Îäî common.jsÏóêÏÑú ÌïòÎØÄÎ°ú Ïó¨Í∏∞ÏÑúÎäî Ï†úÏô∏
    if (e.key === 'Home' && (e.ctrlKey || e.metaKey)) {
      e.preventDefault();
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }
    
    if (e.key === 'End' && (e.ctrlKey || e.metaKey)) {
      e.preventDefault();
      window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
    }
  });

  // 9) ÏÑ±Îä• Î™®ÎãàÌÑ∞ÎßÅ (Í∞úÎ∞úÏö©)
  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
    console.log('üõ†Ô∏è About page development mode');
    console.log('üìä About page elements:', {
      fadeUpElements: document.querySelectorAll('.fade-up').length,
      contentSections: document.querySelectorAll('.content-section').length,
      serviceItems: document.querySelectorAll('.services-list li').length,
      clientBoxes: document.querySelectorAll('.client-box').length,
      scrollIndicator: !!scrollIndicator
    });

    // ÏÑ±Îä• Ï∏°Ï†ï
    window.addEventListener('load', () => {
      setTimeout(() => {
        const perfData = performance.getEntriesByType('navigation')[0];
        console.log('‚ö° About page performance:', {
          domContentLoaded: Math.round(perfData.domContentLoadedEventEnd - perfData.domContentLoadedEventStart) + 'ms',
          loadComplete: Math.round(perfData.loadEventEnd - perfData.loadEventStart) + 'ms',
          totalTime: Math.round(perfData.loadEventEnd - perfData.fetchStart) + 'ms'
        });
      }, 100);
    });

    // ÎîîÎ≤ÑÍπÖÏö© Ï†ÑÏó≠ Ìï®Ïàò
    window.aboutDebug = {
      scrollToTop: () => window.scrollTo({ top: 0, behavior: 'smooth' }),
      scrollToContent: () => {
        const content = document.querySelector('.main-content');
        if (content) content.scrollIntoView({ behavior: 'smooth' });
      },
      showAllElements: () => {
        document.querySelectorAll('.fade-up').forEach(el => {
          el.classList.add('is-visible');
        });
      }
    };
  }

  // 10) Ï¥àÍ∏∞Ìôî ÏôÑÎ£å ÌõÑ ÏÉÅÌÉú ÌôïÏù∏
  setTimeout(() => {
    const isCommonJsLoaded = typeof window.debugMenu !== 'undefined';
    console.log('üîç About page initialization status:', {
      commonJsLoaded: isCommonJsLoaded,
      elementsFound: {
        scrollIndicator: !!scrollIndicator,
        fadeElements: document.querySelectorAll('.fade-up').length,
        serviceItems: document.querySelectorAll('.services-list li').length
      }
    });
  }, 100);

  console.log('‚úÖ About.js initialization complete');
});
